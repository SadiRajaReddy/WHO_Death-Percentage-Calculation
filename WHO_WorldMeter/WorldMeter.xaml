<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_TotalCases" Type="OutArgument(x:String)" />
    <x:Property Name="out_CountryName" Type="OutArgument(x:String)" />
    <x:Property Name="out_NewCases" Type="OutArgument(x:String)" />
    <x:Property Name="out_TotalDeaths" Type="OutArgument(x:String)" />
    <x:Property Name="out_NewDeaths" Type="OutArgument(x:String)" />
    <x:Property Name="out_PercentageofNewCases" Type="OutArgument(x:String)" />
    <x:Property Name="out_PercentageofDeath" Type="OutArgument(x:String)" />
    <x:Property Name="out_Status" Type="OutArgument(x:String)" />
    <x:Property Name="out_Reason" Type="OutArgument(x:String)" />
    <x:Property Name="Out_DT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="Out_JSON" Type="InOutArgument(njl:JObject)" />
    <x:Property Name="arg_OutputFilePath" Type="InArgument(x:String)" />
    <x:Property Name="arg_FilteredTable" Type="InOutArgument(x:String)" />
    <x:Property Name="arg_FileLocation" Type="InArgument(x:String)" />
    <x:Property Name="arg_FilteredWorldMeterTable" Type="InOutArgument(x:String)" />
  </x:Members>
  <this:Main.arg_OutputFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.arg_OutputFilePath>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1153.33333333333,1172.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="WHO_COVID-19 Report &#xA;" DisplayName="WHO_COVID_Report" sap:VirtualizedContainerService.HintSize="885.333333333333,1108" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="ConfigFilePath" />
      <Variable x:TypeArguments="x:String" Name="ConfigSheetName" />
      <Variable x:TypeArguments="x:Object" Name="URL" />
      <Variable x:TypeArguments="x:Object" Name="OutputFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="ConfigDT" />
      <Variable x:TypeArguments="x:Object" Name="OutputFileSheetName" />
      <Variable x:TypeArguments="x:Object" Name="OutputFolderPath" />
      <Variable x:TypeArguments="x:String" Name="ConfigPath" />
      <Variable x:TypeArguments="njl:JObject" Name="argConfig" />
      <Variable x:TypeArguments="x:String" Default="[&quot;C:\Users\&quot;+Environment.username+&quot;\Documents\UiPath\Filter_CovidData_Report\config.json&quot;]" Name="Json_FilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="IsTextExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke WHO_AcessTheWorldMeterPortal workflow" sap:VirtualizedContainerService.HintSize="843.333333333333,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="WHO_WorldMeter\\AccessTheWorldMeterPortal.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:Boolean" x:Key="ArgIsTextExists">[IsTextExists]</InOutArgument>
        <InArgument x:TypeArguments="njl:JObject" x:Key="arg_Config">[Out_JSON]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[IsTextExists]" sap:VirtualizedContainerService.HintSize="843.333333333333,818.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="World meter page available to extract the data" sap:VirtualizedContainerService.HintSize="421.333333333333,656" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke WHO_ExtractTableViewData workflow" sap:VirtualizedContainerService.HintSize="379.333333333333,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="WHO_WorldMeter\\WorldMeter_ExtractTableViewData.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="x:String" x:Key="argFilePath" />
              <InArgument x:TypeArguments="njl:JObject" x:Key="arg_Config">[Out_JSON]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="arg_FileLocation">[arg_FileLocation]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="arg_OutputFilePath">[arg_OutputFilePath]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379.333333333333,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Extraction of Covid data completed&quot;]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379.333333333333,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;WHO_COVID-19_Data Filtering Started&quot;]" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Filter the table extracted" DisplayName="Invoke Covid_FilterTable workflow" sap:VirtualizedContainerService.HintSize="379.333333333333,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="WHO_WorldMeter\\WorldMeter_FilterTableData.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="njl:JObject" x:Key="arg_Config">[Out_JSON]</InOutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TotalCases">[out_TotalCases]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_CountryName">[out_CountryName]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_NewCases">[out_NewCases]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TotalDeaths">[out_TotalDeaths]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_NewDeaths">[out_NewDeaths]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_PercentageofNewCases">[out_PercentageofNewCases]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_PercentageofDeath">[out_PercentageofDeath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_Status">[out_Status]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_Reason">[out_Reason]</OutArgument>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Out_DT">[Out_DT]</InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="arg_OutputFilePath">[arg_OutputFilePath]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="arg_FileLocation">[arg_FileLocation]</InArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="arg_FilteredWorldMeterTable">[arg_FilteredWorldMeterTable]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Page not available to extract the data" sap:VirtualizedContainerService.HintSize="376,185.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Dashboard page not availble to extract the data&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>